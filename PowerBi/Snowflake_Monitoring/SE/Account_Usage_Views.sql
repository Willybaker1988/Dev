grant select on all future in schema  ACCOUNT_USAGE_VIEWS TO ROLE PBI_READER;

CREATE OR REPLACE VIEW VW_REP_DATE_DIMENSION  AS
SELECT   TO_DATE(DAY_ROW) AS DATE 
        ,YEAR(DAY_ROW) AS YEAR
        ,QUARTER(DAY_ROW) AS QUARTER
        ,MONTH(DAY_ROW) AS MONTH_NUM
        ,MONTHNAME(DAY_ROW) AS MONTH_NAME
        ,WEEKOFYEAR(DAY_ROW) AS WEEK_NUM
        ,DAY(DAY_ROW) AS DAY_NUM
        ,DAYNAME(DAY_ROW) AS DAY_NAME
        ,DAYOFWEEK(DAY_ROW) AS DAY_OF_WEEK
        ,DAYOFYEAR(DAY_ROW) AS DAY_OF_YEAR
    FROM 
(
  SELECT DATEADD(DAY, SEQ4(), '2000-01-01') AS day_row
    FROM TABLE(GENERATOR(ROWCOUNT=>10000))  -- Number of days after reference date in previous line
)


CREATE OR REPLACE VIEW VW_REP_SNOWFLAKE_PIPE_USAGE_HISTORY
AS
select 
  PIPE_ID,
  PIPE_NAME,
  START_TIME,
  END_TIME,
  CREDITS_USED,
  BYTES_INSERTED,
  FILES_INSERTED,
  TO_DATE(START_TIME) AS START_DATE,
  DATEDIFF(HOUR, START_TIME, END_TIME) AS PIPELINE_OPERATION_HOURS,
  HOUR(START_TIME) AS TIME_OF_DAY
from "SNOWFLAKE"."ACCOUNT_USAGE"."PIPE_USAGE_HISTORY"
ORDER BY TO_DATE(START_TIME) DESC;


CREATE OR REPLACE VIEW VW_REP_SNOWFLAKE_COPY_HISTORY
AS
SELECT
    FILE_NAME,
    STAGE_LOCATION,
    LAST_LOAD_TIME::DATE AS LAST_LOAD_DATE,
    LAST_LOAD_TIME,
    ROW_COUNT,
    ROW_PARSED,
    FILE_SIZE,
    FIRST_ERROR_MESSAGE,
    FIRST_ERROR_LINE_NUMBER,
    FIRST_ERROR_CHARACTER_POS,
    FIRST_ERROR_COLUMN_NAME,
    ERROR_COUNT,
    ERROR_LIMIT,
    STATUS,
    TABLE_ID,
    TABLE_NAME,
    TABLE_SCHEMA_ID,
    TABLE_SCHEMA_NAME,
    TABLE_CATALOG_ID,
    TABLE_CATALOG_NAME,
    PIPE_CATALOG_NAME,
    PIPE_SCHEMA_NAME,
    PIPE_NAME,
    PIPE_RECEIVED_TIME
FROM "SNOWFLAKE"."ACCOUNT_USAGE"."COPY_HISTORY"


CREATE OR REPLACE VIEW  VW_REP_MONITOR_SAPRAW AS
WITH SOURCE_TARGET_TABLES AS (
SELECT DISTINCT 
     C.TABLE_NAME
FROM 
    "SNOWFLAKE"."ACCOUNT_USAGE"."TABLES" C
WHERE 
    TABLE_TYPE = 'BASE TABLE' 
AND
    TABLE_SCHEMA = 'SAPRAW'
AND
    DELETED IS NULL
AND
    TABLE_NAME NOT IN('0CO_OM_CCA_9_DUMP','MY_DATE_DIMENSION')
),


TARGET_TABLE_LOAD_DATES AS (
SELECT
     S.TABLE_NAME,
     DATE
FROM 
    "DEMO_DB"."ACCOUNT_USAGE_VIEWS"."DATE_DIMENSION" D
CROSS JOIN
    SOURCE_TARGET_TABLES S  
)


SELECT
    E.TABLE_NAME,
    E.DATE AS LOAD_DATE,
    TABLE_ID,
    FILE_NAME,
    STAGE_LOCATION,
    LAST_LOAD_TIME,
    DATE_PART('Hour',LAST_LOAD_TIME) As LAST_LOAD_HOUR,
    ROW_COUNT,
    ROW_PARSED,
    FILE_SIZE,
    FIRST_ERROR_MESSAGE,
    FIRST_ERROR_LINE_NUMBER,
    FIRST_ERROR_CHARACTER_POS,
    FIRST_ERROR_COLUMN_NAME,
    ERROR_COUNT,
    ERROR_LIMIT,
    STATUS,
    TABLE_SCHEMA_ID,
    TABLE_SCHEMA_NAME,
    TABLE_CATALOG_ID,
    TABLE_CATALOG_NAME,
    PIPE_CATALOG_NAME,
    PIPE_SCHEMA_NAME,
    PIPE_NAME,
    PIPE_RECEIVED_TIME
FROM
    TARGET_TABLE_LOAD_DATES E
LEFT JOIN
    "SNOWFLAKE"."ACCOUNT_USAGE"."COPY_HISTORY" CH ON E.TABLE_NAME = CH.TABLE_NAME AND E.DATE = LAST_LOAD_TIME::DATE;
    
 

    
    
    
